apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    // 默认配置
    defaultConfig {
        applicationId "i.am.lucky"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // 资源文件支持多语言
        resConfigs "fa", "fr", "ja", "ko", "ru", "zh-rCN", "zh-rTW"
        // dex突破65535的限制
        multiDexEnabled true
        ndk {
            // 解决64位手机Bugly问题:还可以添加 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            abiFilters "armeabi"
        }
        // 信鸽ID, KEY
        manifestPlaceholders = [
                XG_ACCESS_ID : "2100270821",
                XG_ACCESS_KEY: "A4PD641M6ADN",
        ]

        // 设置项目文件夹
        sourceSets {
            main.java.srcDirs += 'src/main/java'
        }

    }
    // 提高编译速度
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }
    // 双版本打包
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            // 生成双版本应用（测试版，正式版同时安装）
            applicationIdSuffix ".debug"
            jniDebuggable true
        }
    }
    // 自定义应用输出名称
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${ApkName()}_${variant.versionName}_${BuildTime()}.apk"
        }
    }
    // 排除不需要文件，防止库文件构建冲突
    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$androidTestVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$androidEspressoVersion"

    //    // 类Google左滑菜单

    //    implementation('com.mikepenz:materialdrawer:6.0.2@aar') {

    //        transitive = true

    //    }

    // Dagger2，依赖注入
    implementation 'com.google.dagger:dagger:2.14.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.14.1'

    // Android支持
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:support-v13:$supportLibraryVersion"
    implementation "com.android.support:support-annotations:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"

    // 牛油刀注解
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    // 图片加载
    implementation "com.squareup.picasso:picasso:$picassoVersion"

    // 网络封装
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"

    // Android缓存
    implementation "xiaofei.library:android-data-storage:$dataStorageVersion"

    // EventBus,事件总线
    implementation "org.greenrobot:eventbus:$eventBusVersion"

    // 简易Log打印
    implementation "com.orhanobut:logger:$loggerVersion"

    // 导航页轮播图
    implementation "cn.bingoogolapple:bga-banner:$bannerVersion"

    // 圆形头像
    implementation "com.makeramen:roundedimageview:$roundImageVersion"

    // 酷炫弹框
    implementation "com.github.cazaea:SweetAlertDialog:$dialogVersion"

    // 二维码扫描
    implementation 'com.github.cazaea:ScanCode:1.1.2'

    // 自定义RecyclerView
    implementation 'com.github.cazaea:RecyclerView:1.0.0'

    // xml转换工具
    implementation "org.dom4j:dom4j:$xmlTransVersion"

    // SwitchButton
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'

    // Multidex
    implementation "com.android.support:multidex:$multidexVersion"

    // 广告弹框工具
    implementation "cn.yipianfengye.android:ad-library:$adDialogVersion"

    // 权限检查工具
    implementation "com.yanzhenjie:permission:$checkAndGetPermissionVersion"

    // ActivityRouter,路由工具
    implementation "com.github.joyrun.ActivityRouter:router:$routerVersion"
    annotationProcessor "com.github.joyrun.ActivityRouter:router-compiler:$routerVersion"

    // 信鸽jar
    implementation "com.tencent.xinge:xinge:$xingeVersion"

    // wup包
    implementation "com.tencent.wup:wup:$wupVersion"

    // mid包
    implementation "com.tencent.mid:mid:$midVersion"

    // 腾讯TBS
    implementation files('libs/tbs_sdk_v3.6._20180211.jar')

    // Bugly
    implementation "com.tencent.bugly:crashreport_upgrade:$buglyCrashVersion"
    implementation "com.tencent.bugly:nativecrashreport:$buglyNativeVersion"

    // ping++, 必须添加
    implementation "com.pingxx:pingpp-core:$pingxxVersion"

    // 使用支付宝时添加
    implementation "com.pingxx:pingpp-alipay:$pingxxVersion"

    // 使用银联支付时添加
    implementation "com.pingxx:pingpp-upacp:$pingxxVersion"

    // 使用QQ钱包时添加
    implementation "com.pingxx:pingpp-qpay:$pingxxVersion"

    // 使用招行一网通时添加
    implementation "com.pingxx:pingpp-cmbwallet:$pingxxVersion"

    // 使用微信支付时添加,具体版本参考微信官方文档
    implementation "com.tencent.mm.opensdk:wechat-sdk-android-without-mta:$wechatSdkVersion"

    // 图片选择器
    implementation 'com.lzy.widget:imagepicker:0.6.1'

    // 视频播放
    implementation 'com.shuyu:GSYVideoPlayer:2.1.2'

    // 柱状图，折线图
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'

    // 快捷json转对象
    implementation 'com.google.code.gson:gson:2.8.2'

    // 快捷网络加载
    implementation 'com.lzy.net:okgo:2.1.4'

    // 沉浸状态栏
    implementation 'com.gyf.barlibrary:barlibrary:2.3.0'

    // 视频录制相关
    implementation project(':libraay')
}

// 应用名称
static def ApkName() {
    return "Lucky"
}

// 打包日期(当前时间是UTC时区，以20171010格式化时间输出)
static def BuildTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

// 编码格式
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}