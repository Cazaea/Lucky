    /*// 多渠道打包相关
    flavorDimensions "Demo"

    // 多渠道打包相关
    productFlavors {
        // GooglePlay商店
        google {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "google"]
        }
        // 百度手机助手
        baidu {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "baidu"]
        }
        // 腾讯市场
        tencent {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "Tencent"]
        }
        // 豌豆荚市场
        wandoujia {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "wandoujia"]
        }
        // 小米商店
        miui {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "miui"]
        }
        // 华为市场
        huawei {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "huawei"]
        }
        // 360平台
        qihu360 {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "qihu360"]
        }
        // OPPO-可可软件商店
        oppo {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "oppo"]
        }
        // Vivo-软件商店
        vivo {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "vivo"]
        }
        // 魅族
        flyme {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "flyme"]
        }
        // 联想-乐商店
        lenovo {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "lenovo"]
        }
        // 安卓市场
        hiapk {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "hiapk"]
        }
        // 91手机助手
        sj91 {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "sj91"]
        }
        // UC+开发平台
        uc {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "uc"]
        }
        // 安智市场
        anzhi {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "anzhi"]
        }
        // 木蚂蚁
        mumayi {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "mumayi"]
        }
        // 搜狗手机市场
        sogou {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "sogou"]
        }
        // 搜狐应用中心
        sohu {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "sohu"]
        }
        // 淘宝手机助手
        taobao {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "taobao"]
        }
        // 机锋
        gfan {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "gfan"]
        }
        // 应用汇
        appchina {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "appchina"]
        }
        // 网易应用
        wangyi163 {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "wangyi163"]
        }
        // N多市场
        nduoa {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "nduoa"]
        }
        // MM商城-中国移动
        mm10086 {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "mm10086"]
        }
        // WO商店
        wostore {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "wostore"]
        }
        // 优异
        youyi {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "youyi"]
        }
        // 亚马逊
        amazon {
            dimension 'Demo'
            manifestPlaceholders = [UMENG_CHANNEL: "amazon"]
        }

    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }*/

    /*// 多渠道打包相关
    productFlavors {

        Arm {
            dimension 'Demo'
            ndk {
                abiFilters 'arm64-v8a', 'armeabi', 'armeabi-v7a'
            }
        }

        x86 {
            dimension 'Demo'
            ndk {
                abiFilter "x86"
            }
        }
    }*/

    /*applicationVariants.all { variant ->
            variant.outputs.all { output ->
                output.processManifest.doLast {
                    // Stores the path to the maifest.
                    String manifestPath = "$manifestOutputDirectory/AndroidManifest.xml"
                    // Stores the contents of the manifest.
                    def manifestContent = file(manifestPath).getText()
                    // Changes the version code in the stored text.
                    manifestContent = manifestContent.replace('android:versionCode="1"',
                            String.format('android:versionCode="%s"', VERSION_CODE))
                    // Overwrites the manifest with the new text.
                    file(manifestPath).write(manifestContent)
                }
            }
        }*/

        //    implementation 'com.google.zxing:zxing-parent:3.3.1'
        //    implementation 'com.google.zxing:core:3.3.1'
        //    implementation 'com.google.zxing:android-core:3.3.0'
        //    implementation 'com.google.zxing:android-integration:3.3.0'